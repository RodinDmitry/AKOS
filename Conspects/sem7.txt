АКОС семинар
-------------------------------------------------------------------------------
Многопоточные вычисления
Задачи
1)параллельно в многопоточном режиме игру жизнь на торе
  определить точку насыщения
2)полудуплексный pipe
-------------------------------------------------------------------------------
Процесс - обьект, которым управляет ОС
Многопоточность - паарллельное исполнение нескольких функций в рамках процесса
с использованием несколких стеков
* Алгоритмы планирования *
ptread_create();  - создание потока
начальное название lwp - легковесные процессы
pthread - thread из POSIX
pthread_create() => clone()
win :   proc
	threads 
	fibers - thread в win планированием заниматся программист
-------------------------------------------------------------------------------
Синхронизация
int x;//0
f1()
{
x++;
}
f2()
{
x--;
}
-------------------------------------------------------------------------------
p()
{
	while(x<=0);
	x--;
}
v()
{
	x++;
}
ASM
x-- : mov eax,[x]
      dec eax
      mov [x],eax // потеря управления во время исполнения этой комманды
-------------------------------------------------------------------------------
p1,p2,v
потеря управления p1 после проверки
-------------------------------------------------------------------------------
мютексы и семафоры
mutex and semaphores
Семафоры Дейкстры 
p - захватить ресурс
v - освободить ресурс
mutex - mutual exeption
-------------------------------------------------------------------------------
mutex - захват ресурса для выполнения некоторой оперции с последующим освобождением
pthread_mutex.lock();
pthread_mutex.unlock();
pthread_mutex_create();
Критическая секция  - пространиство между lock и unlock
-------------------------------------------------------------------------------
Сигналы и разделяемая память
1) memory mapping files
   void* mmap(); 
   msync();
   munmap();
2) shared memory 
   shm_open();
   mmap();
-------------------------------------------------------------------------------
affinity 
pthread_set_aff
phtread_get_aff









