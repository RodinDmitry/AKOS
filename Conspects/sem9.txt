АКОС Семинар
-------------------------------------------------------------------------------
Сеть
Написать аналог netcat
-------------------------------------------------------------------------------
Проблемы
1) сетевая идентификация
2) идентификация процесса
Протокол RIP
int port; "новый номер" процесса
1 - 65535 (2^16 - 1)
варианты решения 
1) mac - адрес  - "серийный номер"
-------------------------------------------------------------------------------
intronet  - локальная сеть
Передача информации из одной сети в другую
* роутер
* таблица маршрутизации
Локальная 
|  *A*  | <-> xyz <-> |  *B*  |
Internet
| *A* | <-> xyz <-> x1y1z1 <-> ...
Протоколы динамической маршрутизации
-------------------------------------------------------------------------------
Уровни передачи 
1) канальный уровень 
проблема - трансляция пакета на канал
2) сетевой  - появление IP адресов - первый уровень абстракции
Задача - отправка пакета из A в B, вне зависимости от располодения пунктов
	Проблема - 2^32 - малое число уникальных адресов
	Решения 
	1) IPv6
	2) введения нового уровня
3) транспортый уровень TCP
   контроль за отправкой пакетов, ACK
   Оптимизации - отправка пакетов блоками(окно передачи)
   TCP - потоковый протокол
   Гарантии - сообщение будет доставлено
	      сообщение будет в исходном порядке

   Появляется понятие порт
-------------------------------------------------------------------------------
Порты принято дробить на две части
первая половина - порты на которых ожидают коммуникацию (серверные \ сервисные)
вторая половина - клиентские порты 
-------------------------------------------------------------------------------
Client    	  				||  	Server
1.2.3.4 (port 32717)	  			=>	www.  .ru (port 80)


Предположим, что адрес 1.2.3.4 не уникален
10.*.*.*    |  адреса вритуальных сетей
172.16.*.*  |
192.168.*.* |			
-------------------------------------------------------------------------------
Проблема - нужно подключить 1000 комп. к интернету
решение - объединяем всех в виртуальную сеть и поключаем к порту
Роутер производит трансляцию адресов адреса.			
Роутеру прихотит ответ и роутер, и исходя из порта происводит обратную трансляцию
-------------------------------------------------------------------------------
Протокол UDP - user datagram protocol
* нет установления соединения
* нет контроля доставки
* есть контрольная сумма
* наличие порта
уникальной является связка из IP,протокола и порта
-------------------------------------------------------------------------------
Проблема - доставить инвормацию всем пользователям сети
Broadcast - возможность переслать сообщение, адресованное всем пользователям
Протокол DHCP
Multicast  - управляемое broadcast вещание
	адреса 235.*.*.* 
Протокол IGMP
-------------------------------------------------------------------------------
Сетевые протоколы в linux
Cписок программ:
* ping  | ICMP protocol 
 проверяет только наличие и отсутствие
* tellnet
* netcat - усеет работать по TCP и UDP
* tcpdump(wireshark) 
* netstat
* traceroad (tracepath) 
 прицип работы 
 1) отправим пакет с ttl равным 1, далее с ttl равным 2 и т.д.
 2) обработаем вернувшиеся сообщения об уничтожении пакета
-------------------------------------------------------------------------------
Linux
TCP
1) socket(int domain,int type,int protocol) -вернет дескриптор
2) connect(int sockfd, const struct sockaddr* addr, stocklen_t addrlen);
3) read/write
4) close
-------------------------------------------------------------------------------
UDP
1)sendto
2)receivefrom
Процедура завершения соединения
при закрытии отправляется fin - пакет и ожидается подтверждения 
SYN - пакет  - пакет установки соединения.
-------------------------------------------------------------------------------
у TCP протокола существует timeout при котором накапивается пакет (алгоритм Негла(Nagle))
fcntl - контроль над дескриптором
select - ожидание появления события на дескрипторе 
виды событий
1) дестриптор готов для ввода
2) дескриптов готов для вывода
3) на дескрипторе произошли ошибки
можно указать timeout, при истечении которого select закончит работу
-------------------------------------------------------------------------------
в коннект передается поле sockaddr* (иногда в man указывается void* )
sockaddr
{
type 
};
sockaddr_in - структура, которая содержит всю нужную информацию
{
 addr
 port
};`
